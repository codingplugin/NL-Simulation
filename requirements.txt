# Node Localization Simulation Platform - Requirements
# This file lists all dependencies and development tools needed for the project

# =============================================================================
# CORE DEPENDENCIES
# =============================================================================

# React and Core Framework
react>=18.2.0
react-dom>=18.2.0

# Data Visualization
recharts>=3.1.0

# Data Processing
papaparse>=5.5.3

# =============================================================================
# DEVELOPMENT DEPENDENCIES
# =============================================================================

# Build Tools
vite>=4.0.0
@vitejs/plugin-react>=4.0.0

# =============================================================================
# ADDITIONAL RECOMMENDED PACKAGES
# =============================================================================

# Code Quality and Linting
eslint>=8.0.0
eslint-plugin-react>=7.0.0
eslint-plugin-react-hooks>=4.0.0
prettier>=2.0.0

# Testing
@testing-library/react>=13.0.0
@testing-library/jest-dom>=5.0.0
vitest>=0.25.0
jsdom>=21.0.0

# Type Checking (Optional - for TypeScript migration)
# typescript>=4.9.0
# @types/react>=18.0.0
# @types/react-dom>=18.0.0

# =============================================================================
# DEVELOPMENT TOOLS
# =============================================================================

# Git Hooks
husky>=8.0.0
lint-staged>=13.0.0

# Bundle Analysis
rollup-plugin-visualizer>=5.0.0

# =============================================================================
# OPTIONAL ENHANCEMENTS
# =============================================================================

# State Management (if needed for larger scale)
# @reduxjs/toolkit>=1.9.0
# react-redux>=8.0.0

# Routing (if needed for multi-page app)
# react-router-dom>=6.0.0

# UI Components (if needed)
# @mui/material>=5.0.0
# @emotion/react>=11.0.0
# @emotion/styled>=11.0.0

# =============================================================================
# INSTALLATION INSTRUCTIONS
# =============================================================================

# To install all dependencies:
# npm install

# To install only production dependencies:
# npm install --production

# To install development dependencies:
# npm install --save-dev

# To install specific packages:
# npm install package-name

# =============================================================================
# SYSTEM REQUIREMENTS
# =============================================================================

# Node.js: >=16.0.0
# npm: >=8.0.0
# Git: >=2.0.0

# =============================================================================
# BROWSER SUPPORT
# =============================================================================

# Modern browsers with ES6+ support:
# - Chrome >= 90
# - Firefox >= 88
# - Safari >= 14
# - Edge >= 90

# =============================================================================
# DEVELOPMENT SETUP
# =============================================================================

# 1. Install Node.js (>=16.0.0)
# 2. Clone the repository
# 3. Run: npm install
# 4. Run: npm run dev
# 5. Open: http://localhost:5173

# =============================================================================
# BUILD AND DEPLOYMENT
# =============================================================================

# Development build:
# npm run dev

# Production build:
# npm run build

# Preview production build:
# npm run preview

# =============================================================================
# CODE QUALITY COMMANDS
# =============================================================================

# Lint code:
# npm run lint

# Format code:
# npm run format

# Run tests:
# npm run test

# =============================================================================
# PROJECT STRUCTURE
# =============================================================================

# src/
# ├── App.jsx                 # Main application component
# ├── main.jsx               # Application entry point
# ├── index.css              # Global styles
# └── optimizations/         # Optimization algorithms
#     ├── soa.js            # Seagull Optimization Algorithm
#     ├── aq.js             # Aquila Optimizer
#     ├── dbo.js            # Dung Beetle Optimizer
#     ├── covid.js          # Coronavirus Optimization Algorithm
#     └── chimp.js          # Chimp Optimization Algorithm

# =============================================================================
# ALGORITHM DEPENDENCIES
# =============================================================================

# The optimization algorithms are self-contained JavaScript modules
# that don't require additional external dependencies beyond the core
# React and visualization libraries listed above.

# Each algorithm implements:
# - Fitness function
# - Step function
# - Centroid calculation
# - Distance estimation
# - Euclidean distance calculation

# =============================================================================
# PERFORMANCE CONSIDERATIONS
# =============================================================================

# - Population size: 20 (default)
# - Maximum iterations: 50 (default)
# - Area size: 200x200 units
# - Transmission range: 30 units
# - Noise factor: 0.1 (default)

# For larger simulations, consider:
# - Increasing memory allocation
# - Using Web Workers for heavy computations
# - Implementing virtual scrolling for large node sets 